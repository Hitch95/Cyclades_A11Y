name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:

  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [22.9.0]
    
    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository
    
    steps:
    - name: Clone repository
      uses: actions/checkout@v4
    
    # Deno backend
    - name: Install Deno
      uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x

    - name: Check if Deno is installed
      run: deno --version

    - name: Build step
      working-directory: ./cyclades-server
      run: deno task build

    - name: Upload to Deno Deploy
      uses: denoland/deployctl@v1
      with:
        project: "cyclades-server"
        entrypoint: "deploy.ts"
        root: "./cyclades-server"
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DATABASE_API_KEY: ${{ secrets.DATABASE_API_KEY }}

    # - name: Lint
    #   run: deno lint
    
    # Vite/React frontend
    - uses: actions/checkout@v4

    - name: List root directory contents
      run: ls -la

    - name: List cyclades directory contents (if it exists)
      run: |
       if [ -d "./cyclades" ]; then
        ls -la ./cyclades
       else
        echo "cyclades directory does not exist"
       fi

    - uses: pnpm/action-setup@v4

      name: Install pnpm
      with:
        version: 9
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'

    - name: Print current working directory
      run: pwd

    - name: Check for pnpm-lock.yaml
      run: |
        if [ -f "pnpm-lock.yaml" ]; then
          echo "pnpm-lock.yaml found in current directory"
        else
          echo "pnpm-lock.yaml not found in current directory"
          echo "Searching for pnpm-lock.yaml in subdirectories:"
          find . -name "pnpm-lock.yaml"
        fi

    - run: pnpm install

    # - name: Lint
    #   working-directory: ./cyclades
    #   run: pnpm run lint
    
    # - name: Build
    #   working-directory: ./cyclades
    #   run: pnpm run build
